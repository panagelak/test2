#!/usr/bin/env python

PACKAGE = "zed_publisher"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()


image_format_enum = gen.enum( [gen.const("jpeg", str_t, "jpeg", "JPEG lossy compression (only image)"),
                         gen.const("png", str_t, "png", "PNG lossless compression"),
                         gen.const("rvl", str_t, "rvl", "RVL lossless compression (only depth)")],
                        "Enum to set the compression format" )

#depth_format_enum = gen.enum( [gen.const("png", str_t, "png", "PNG lossless compression"),
#                         gen.const("rvl", str_t, "rvl", "RVL lossless compression")],
#                        "Enum to set the compression format" )

gen.add("img_format", str_t, 0, "Compression format", "jpeg", edit_method = image_format_enum)
gen.add("img_jpeg_quality", int_t, 0, "JPEG quality percentile", 80, 1, 100)
gen.add("img_jpeg_progressive", bool_t, 0, "Enable compression to progressive JPEG", False)
gen.add("img_jpeg_optimize", bool_t, 0, "Enable JPEG compress optimization", False)
gen.add("img_jpeg_restart_interval", int_t, 0, "JPEG restart interval", 0, 0, 65535)
gen.add("img_png_level", int_t, 0, "PNG compression level", 9, 1, 9)

gen.add("depth_format", str_t, 0, "Compression format", "png", edit_method = image_format_enum)
gen.add("depth_max", double_t, 0, "Maximum depth value (meter) ", 5 , 1, 100)
gen.add("depth_quantization", double_t, 0, "Depth value at which the sensor accuracy is 1 m", 40, 1, 150)
gen.add("depth_png_level", int_t, 0, "PNG compression level", 1, 1, 9)

exit(gen.generate(PACKAGE, "zed_publisher", "ZEDPublisher"))